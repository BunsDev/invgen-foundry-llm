import type { TestExpDecayMath, TestExpDecayMathInterface } from "../../../contracts/helpers/TestExpDecayMath";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, ContractFactory, Overrides } from "ethers";
type TestExpDecayMathConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestExpDecayMath__factory extends ContractFactory {
    constructor(...args: TestExpDecayMathConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<TestExpDecayMath>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): TestExpDecayMath;
    connect(signer: Signer): TestExpDecayMath__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061093f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806337627dde14610030575b600080fd5b61004361003e366004610738565b610055565b60405190815260200160405180910390f35b600061006284848461006c565b90505b9392505050565b60008061007983856107d2565b63ffffffff169050600061008d84866107f5565b63ffffffff169050600060405180604001604052808381526020018663ffffffff16815250905060006100bf826100f4565b90506100e88882602001518660026100d791906108fc565b84516100e39190610908565b6104f8565b98975050505050505050565b6040805180820190915260008082526020820152600061012d6f58b90bfbe8e7bcd5e4f1d9cc01f97b57846000015185602001516104f8565b905060008080700800000000000000000000000000000000841061017d576040517f35278d1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6f10000000000000000000000000000000840692508291506001607f1b8280020491506710e1b3be415a00008202016001607f1b8383020491506705a0913f6b1e00008202016001607f1b838302049150670168244fdac780008202016001607f1b838302049150664807432bc180008202016001607f1b838302049150660c0135dca040008202016001607f1b8383020491506601b707b1cdc0008202016001607f1b8383020491506536e0f639b8008202016001607f1b838302049150650618fee9f8008202016001607f1b838302049150649c197dcc008202016001607f1b838302049150640e30dce4008202016001607f1b83830204915064012ebd13008202016001607f1b8383020491506317499f008202016001607f1b8383020491506301a9d4808202016001607f1b838302049150621c63808202016001607f1b8383020491506201c6388202016001607f1b838302049150611ab88202016001607f1b83830204915061017c8202016001607f1b83830204915060148202016001607f1b83830204915081016001607f1b836721c3677c82b400008304010190506f100000000000000000000000000000008416156103625770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f982020490505b6f200000000000000000000000000000008416156103a4577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e77882020490505b6f400000000000000000000000000000008416156103e5576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed582020490505b6001607f1b841615610419576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e82020490505b70010000000000000000000000000000000084161561045a576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c582020490505b70020000000000000000000000000000000084161561049a576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d782020490505b7004000000000000000000000000000000008416156104d8576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc30782020490505b604080518082019091529081526001607f1b602082015295945050505050565b600080600061050786866105f7565b915091508160000361052c5783818161052257610522610774565b0492505050610065565b838210610565576040517f35278d1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610572878787610639565b9050600080610582858585610654565b91509150816000036105aa5786818161059d5761059d610774565b0495505050505050610065565b6000876105b860008a61068c565b16905060006105c8848484610696565b905060006105e4838b816105de576105de610774565b046106db565b919091029b9a5050505050505050505050565b60008060006106068585610710565b905084840280821061061f579081900392509050610632565b600161062b838361068c565b0393509150505b9250929050565b6000818061064957610649610774565b838509949350505050565b60008082841061066a5750839050818303610684565b61067560018661091f565b61067f858561068c565b915091505b935093915050565b8082035b92915050565b6000806106bc836106a860008661068c565b816106b5576106b5610774565b0460010190565b90508284816106cd576106cd610774565b048186021795945050505050565b60006001815b6008811015610709576106ff826106fb600287830261068c565b0290565b91506001016106e1565b5092915050565b60006000198284099392505050565b803563ffffffff8116811461073357600080fd5b919050565b60008060006060848603121561074d57600080fd5b8335925061075d6020850161071f565b915061076b6040850161071f565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff808416806107e9576107e9610774565b92169190910492915050565b600063ffffffff8084168061080c5761080c610774565b92169190910692915050565b600181815b80851115610853578160001904821115610839576108396107a3565b8085161561084657918102915b93841c939080029061081d565b509250929050565b60008261086a57506001610690565b8161087757506000610690565b816001811461088d5760028114610897576108b3565b6001915050610690565b60ff8411156108a8576108a86107a3565b50506001821b610690565b5060208310610133831016604e8410600b84101617156108d6575081810a610690565b6108e08383610818565b80600019048211156108f4576108f46107a3565b029392505050565b6000610065838361085b565b8082028115828204841417610690576106906107a3565b81810381811115610690576106906107a356fea164736f6c6343000813000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint32";
            readonly name: "timeElapsed";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "halfLife";
            readonly type: "uint32";
        }];
        readonly name: "calcExpDecay";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): TestExpDecayMathInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestExpDecayMath;
}
export {};
//# sourceMappingURL=TestExpDecayMath__factory.d.ts.map